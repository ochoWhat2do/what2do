plugins {
	id 'java'
	id 'org.springframework.boot' version '3.1.2'
	id 'io.spring.dependency-management' version '1.1.2'
}

group = 'com.ocho'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	// swagger
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.0.2'

	// JSON parser
	implementation 'com.googlecode.json-simple:json-simple:1.1.1'

	// JWT
	compileOnly group: 'io.jsonwebtoken', name: 'jjwt-api', version: '0.11.5'
	runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-impl', version: '0.11.5'
	runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-jackson', version: '0.11.5'

	// === QueryDsl 시작 ===
	// == 스프링 부트 3.0 이상 ==
	implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
	annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jakarta"
	annotationProcessor "jakarta.annotation:jakarta.annotation-api"
	annotationProcessor "jakarta.persistence:jakarta.persistence-api"
	// AWS
	implementation 'org.springframework.cloud:spring-cloud-starter-aws:2.2.6.RELEASE'
	//엔티티에 json 선언하기 위한 hibernate 라이브러리
	implementation 'io.hypersistence:hypersistence-utils-hibernate-60:3.3.2'
	// jpa
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	// spring security
	implementation 'org.springframework.boot:spring-boot-starter-security'
	// valid-check
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	// spring-web
	implementation 'org.springframework.boot:spring-boot-starter-web'
	// thymeleaf
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity6'
	// lombok
	annotationProcessor 'org.projectlombok:lombok'
	compileOnly 'org.projectlombok:lombok'
	// mysql
	implementation 'mysql:mysql-connector-java:8.0.33'
	// test
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	// oauth
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
	// Redis
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'
	// Thymeleaf Template
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity6'
}

tasks.named('test') {
	useJUnitPlatform()
}

// Querydsl 설정
def querydslSrcDir = 'src/main/generated'

clean {
	delete file (querydslSrcDir)
}
tasks.withType(JavaCompile) {
	options.generatedSourceOutputDirectory = file(querydslSrcDir)
}